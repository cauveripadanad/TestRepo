<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" ignored="0" total="4" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="33" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="33" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
      <class name="com.practice.examples.AnnotationExample">
        <test-method status="PASS" signature="bt()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="bt" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bt -->
        <test-method status="PASS" signature="bm()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="bm" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method status="SKIP" signature="t1()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="t1" duration-ms="16" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.practice.examples.AnnotationExample.t1(AnnotationExample.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t1 -->
        <test-method status="PASS" signature="bc()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="bc" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bc -->
        <test-method status="PASS" signature="am()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="am" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method status="PASS" signature="am()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="am" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method status="FAIL" signature="t1()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="t1" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.practice.examples.AnnotationExample.t1(AnnotationExample.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t1 -->
        <test-method status="SKIP" signature="t1()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="t1" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.practice.examples.AnnotationExample.t1(AnnotationExample.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.retryFailed(Invoker.java:838)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1009)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t1 -->
        <test-method status="PASS" signature="t2()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="t2" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- t2 -->
        <test-method status="PASS" signature="bm()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="bm" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method status="PASS" signature="bm()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="bm" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method status="PASS" signature="bm()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="bm" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bm -->
        <test-method status="PASS" signature="at()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="at" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- at -->
        <test-method status="PASS" signature="am()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="am" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method status="PASS" signature="am()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="am" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- am -->
        <test-method status="PASS" signature="ac()[pri:0, instance:com.practice.examples.AnnotationExample@25af5db5]" name="ac" is-config="true" duration-ms="0" started-at="2018-03-26T07:25:58Z" finished-at="2018-03-26T07:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ac -->
      </class> <!-- com.practice.examples.AnnotationExample -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
